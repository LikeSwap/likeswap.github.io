{"version":3,"sources":["components/Input/Input.tsx","hooks/useTokenBalance.ts","hooks/useApprove.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","../node_modules/js-base64/base64.mjs","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/Input/index.ts","utils/getTimePeriods.ts","hooks/useAllowance.ts","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","useApprove","lpContract","dispatch","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","useLotteryApprove","useCake","lotteryContract","useLottery","useIfoApprove","tokenContract","spenderAddress","ethers","constants","MaxUint256","send","from","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","version","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64chs","Array","prototype","slice","b64tab","tab","forEach","c","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","it","fn","x","_mkUriSafe","src","replace","m0","_tidyB64","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","strs","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","_noEnum","v","enumerable","writable","configurable","extendString","_add","name","body","Object","defineProperty","this","extendUint8Array","gBase64","VERSION","fromBase64","toBase64","encodeURL","isValid","extendBuiltins","Wrapper","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","useLotteryAllowance","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","dependency","fetch","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","on","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","ticketIssue","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","ProgressWrapper","TopTextWrapper","BottomTextWrapper","LotteryProgress","Text","TranslateString","useI18n","msUntilLotteryDraw","getLotteryDrawTime","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/8.11199f92.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@likeswaporg/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export { default } from './Input'\nexport type { InputProps } from './Input'\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\n// eslint-disable-next-line\nimport { Text, Progress } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  // eslint-disable-next-line\n  getLotteryDrawStep,\n  // eslint-disable-next-line\n  getTicketSaleTime,\n  // eslint-disable-next-line\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n// eslint-disable-next-line\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  // eslint-disable-next-line\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  // eslint-disable-next-line\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      {/* <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny /> */}\n      <TopTextWrapper>\n        {/* <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText> */}\n        <Text fontSize=\"40px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Lottery Draw!') : TranslateString(0, 'Buy Tickets')}\n        </Text>\n      </TopTextWrapper>\n      <BottomTextWrapper>\n        <Text color=\"contrast\">\n          {/* {timeUntilLotteryDraw} */}\n             {TranslateString(0, 'Lottery Phase ↑')}\n          </Text>\n        </BottomTextWrapper>\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The Like Swap Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with LIKE')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@likeswaporg/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              LIKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@likeswaporg/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@likeswaporg/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@likeswaporg/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"LIKE\"\n      />\n      <div>\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 LIKE')}</Tips>\n        <Tips>{TranslateString(458, '1 Ticket = 10 LIKE')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your LIKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LIKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          fullWidth\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@likeswaporg/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your LIKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"LIKE\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve LIKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@likeswaporg/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@likeswaporg/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} LIKE</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@likeswaporg/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n           <Link\n              href=\"https://api.likeswap.org/api/lottery?page=0&pageSize=25\"\n              target=\"_blank\"\n            >\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\n // eslint-disable-next-line\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/like/5.png\" alt=\"lottery\" width={200} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend LIKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.likeswap.org/core-products/lottery\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@likeswaporg/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(\n      `https://api.likeswap.org/api/singleLottery?lotteryNumber=${lotteryNumber}`,\n    )\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@likeswaporg/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@likeswaporg/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@likeswaporg/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@likeswaporg/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@likeswaporg/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@likeswaporg/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@likeswaporg/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@likeswaporg/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@likeswaporg/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.likeswap.org/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}