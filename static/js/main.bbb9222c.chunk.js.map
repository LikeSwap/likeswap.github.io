{"version":3,"sources":["config/constants/types.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","hooks/useRefresh.ts","contexts/Localisation/translationsContext.ts","components/layout/Page.tsx","components/layout/Container.tsx","config/constants/contracts.ts","contexts/BlockContext.tsx","utils/addressHelpers.ts","utils/multicall.ts","config/constants/pools.ts","utils/web3.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","config/constants/referrals.ts","state/referrals/fetchTotalReferralCommissions.ts","state/referrals/fetchTotalReferrals.ts","state/referrals/index.ts"],"names":["QuoteToken","PoolCategory","ZERO","BigNumber","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","pid","lpAddresses","tokenAddresses","isTokenOnly","quoteTokenAdresses","lpAdress","CHAIN_ID","calls","address","name","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","div","pow","tokenPriceVsQuote","tokenSymbol","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","likePerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","data","console","log","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","useFetchPublicData","useDispatch","slowRefresh","useRefresh","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","val","BNB","CAKE","plus","useReferrals","fetchTotalReferralsDataAsync","fetchTotalReferralCommissionsDataAsync","referrals","nodes","process","getNodeUrl","randomIndex","random","RefreshContext","React","createContext","slow","fast","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","fastRefresh","defaultTranslationState","translations","setTranslations","TranslationsContext","Page","styled","Container","theme","mediaQueries","sm","lg","cake","56","97","masterChef","sousChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","usdt","like","referral","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","getCakeAddress","addresses","chainId","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getReferralAddress","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","pools","sousId","tokenName","stakingTokenName","stakingTokenAddress","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","sortOrder","isFinished","image","TWT","stakingLimit","BINANCE","COMMUNITY","SYRUP","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getContract","contractOptions","nonBnbPools","poolsConfig","filter","p","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingLike","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","USDT","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","Menu","props","useWallet","connect","reset","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","Lottery","Ifos","NotFound","Referrals","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","fallback","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","totalReferrals","totalReferralCommissions","referralContract","referralABI","fetchTotalReferralCommissions","fetchTotalReferrals","referralsCount","ReferralConfig","ReferralsSlice","setTotalReferralsData","setTotalReferralCommissionsData"],"mappings":"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","file":"static/js/main.bbb9222c.chunk.js","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'USDT' = 'USDT',\n  'LIKE' = 'LIKE',\n  'EBC' = 'EBC',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'BTCB' = 'BTCB',\n  'ETH' = 'ETH',\n  'DOT' = 'DOT',\n  'SOL' = 'SOL',\n  'LINK' = 'LINK',\n  'USDC' = 'USDC',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n\nexport interface ReferralConfig {\n  totalReferrals: number\n  totalReferralCommissions: number\n}\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\nconst ZERO = new BigNumber(0)\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const { pid, lpAddresses, tokenAddresses, isTokenOnly, quoteTokenAdresses } = farmConfig\n      const lpAdress = lpAddresses[CHAIN_ID]\n\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: isTokenOnly ? tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceLP, quoteTokenBlanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n        await multicall(erc20, calls)\n\n      let tokenAmount\n      let lpTotalInQuoteToken\n      let tokenPriceVsQuote\n      if (farmConfig.isTokenOnly) {\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\n          tokenPriceVsQuote = new BigNumber(1)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\n      } else {\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if (tokenAmount.comparedTo(0) > 0) {\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\n        } else {\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\n        }\n      }\n\n      // Only make masterchef calls if farm has pid\n      const [info, totalAllocPoint, likePerBlock] =\n        pid || pid === 0\n          ? await multicall(masterchefABI, [\n              {\n                address: getMasterChefAddress(),\n                name: 'poolInfo',\n                params: [pid],\n              },\n              {\n                address: getMasterChefAddress(),\n                name: 'totalAllocPoint',\n              },\n              {\n                address: getMasterChefAddress(),\n                name: 'likePerBlock',\n              },\n            ])\n          : [null, null]\n\n      const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : ZERO\n      const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : ZERO\n\n      // console.log('결과 likePerBlock', likePerBlock)\n      // console.log('결과 allocPoint', allocPoint)\n      // console.log('결과 tokenAmount', tokenAmount.toJSON())\n      // console.log('결과 lpTotalInQuoteToken', lpTotalInQuoteToken.toJSON())\n      // console.log('결과 tokenPriceVsQuote', tokenPriceVsQuote.toJSON())\n      // console.log('결과 poolWeight', poolWeight.toNumber())\n      // console.log('결과 info', info)\n      // console.log('결과 depositFeeBP', info ? info.depositFeeBP : 0)\n      // console.log('결과 multiplier', `${allocPoint.div(100).toString()}X`)\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info ? info.depositFeeBP : 0,\n        likePerBlock: new BigNumber(likePerBlock).toNumber(),\n      }\n    }),\n  )\n   // eslint-disable-next-line\n  console.log('lp', data)\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingLike',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\n // eslint-disable-next-line\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\n // eslint-disable-next-line\nimport {\n  fetchFarmsPublicDataAsync,\n   // eslint-disable-next-line\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchTotalReferralsDataAsync,\n  fetchTotalReferralCommissionsDataAsync,\n} from './actions'\nimport { State, Farm, Pool, Referral } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  //  const pid = 0 // LIKE-BUSD LP\n  //  const bnbPriceUSD = usePriceBnbBusd()\n  //  const farm = useFarmFromPid(pid)\n  //  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0 // LIKE-BUSD LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms()\n  const bnbPrice = usePriceBnbBusd()\n  const cakePrice = usePriceCakeBusd()\n  let value = new BigNumber(0)\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\n      } else {\n        val = farm.lpTotalInQuoteToken\n      }\n      value = value.plus(val)\n    }\n  }\n  return value\n}\n\n// Referrals\n\nexport const useReferrals = (account): Referral => {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchTotalReferralsDataAsync(account))\n      dispatch(fetchTotalReferralCommissionsDataAsync(account))\n    }\n  }, [account, dispatch])\n\n  const referrals = useSelector((state: State) => state.referrals?.data)\n  return referrals\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","export default {\n  cake: {\n    56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    97: '0xeb44841d356b706684460eef19c7e577986bd637',\n  },\n  masterChef: {\n    56: '0xd69d858e32438a44fb5cba7a4619970fb0746654',\n    97: '0xbd13029c6cf665f8058cfec5fd26b423a9e16519',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  wbnb: {\n    56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n  },\n  lottery: {\n    56: '0x4ee3aed30e4bf5f3f63c4dada9f7840bfd96f058',\n    97: '0xf77c871436d55d84840b6f265d474c29aa1c9890',\n  },\n  lotteryNFT: {\n    56: '0xf1200171ddb0cd2315dde74b0d6a03ca31dfb783',\n    97: '0xd340b3d5e4a7f4c8fc391cf63e10d56e3689021f',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x6ab4e5cd7561d105399308250f71bb8d9ae2dc91',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xE0dFffc2E01A7f051069649aD4eb3F518430B6a4',\n  },\n    usdt: {\n    56: '0x55d398326f99059ff775485246999027b3197955',\n    97: '0x7afd064DaE94d73ee37d19ff2D264f5A2903bBB0',\n  },\n    like: {\n    56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    97: '0xeb44841d356b706684460eef19c7e577986bd637',\n  },\n  referral: {\n    56: '0xa1b19b4dc636542479c51b3d310684d45e563c88',\n    97: '0x940eb395d4398a12aa897e25bd335ed5ac3c8b26',\n  },\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n\nexport const getReferralAddress = () => {\n  return addresses.referral[chainId]\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  try {\n    const web3 = getWeb3()\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n    const itf = new Interface(abi)\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n    return res\n  } catch (error) {\n   // eslint-disable-next-line\n    console.log('call err', error)\n    return [null]\n  }\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://saltswap.finance/',\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 51,\n    tokenName: 'BRY',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://berrydata.co/',\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 50,\n    tokenName: 'ZEE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://zeroswap.io/',\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 49,\n    tokenName: 'SWGb',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://swirgepay.com/',\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  \n  {\n    sousId: 46,\n    tokenName: 'SFP',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.safepal.io/',\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 45,\n    tokenName: 'LINA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://linear.finance/',\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 44,\n    tokenName: 'LINA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://linear.finance/',\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 43,\n    tokenName: 'LIT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.litentry.com/',\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 42,\n    tokenName: 'HGET',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.hedget.com/',\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 41,\n    tokenName: 'BDO',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://bdollar.fi/',\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 40,\n    tokenName: 'EGLD',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://elrond.com/',\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 39,\n    tokenName: 'UST',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://mirror.finance/',\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 38,\n    tokenName: 'wSOTE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://soteria.finance/#/',\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 37,\n    tokenName: 'FRONT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://frontier.xyz/',\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 36,\n    tokenName: 'Helmet',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.helmet.insure/',\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 35,\n    tokenName: 'BTCST',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.1-b.tc/',\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 34,\n    tokenName: 'BSCX',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://bscex.org/',\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 33,\n    tokenName: 'TEN',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.tenet.farm/',\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 32,\n    tokenName: 'bALBT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://allianceblock.io/',\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 31,\n    tokenName: 'ASR',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 30,\n    tokenName: 'ATM',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 29,\n    tokenName: 'OG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 28,\n    tokenName: 'REEF',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://reef.finance/',\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 27,\n    tokenName: 'DITTO',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://ditto.money/',\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 9,\n  },\n  {\n    sousId: 26,\n    image: 'CAKETWT',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.TWT,\n    stakingTokenAddress: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n    stakingLimit: 1000,\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 24,\n    tokenName: 'JUV',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 25,\n    tokenName: 'PSG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 22,\n    tokenName: 'JUV',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x27Bd41E77cab966a57232915292410ACfD2761Ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 23,\n    tokenName: 'PSG',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x1DA236Ec18D80ADd7740baD2A74cdA2ADb9E17bE',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.chiliz.com',\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 2,\n  },\n  {\n    sousId: 21,\n    tokenName: 'VAI',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://venus.io/',\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 20,\n    image: 'CAKEBNB',\n    tokenName: 'CAKE',\n    stakingTokenName: QuoteToken.BNB,\n    stakingLimit: 10,\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    projectLink: 'https://saltswap.finance/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 19,\n    tokenName: 'BNB',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://saltswap.finance/',\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 18,\n    tokenName: 'BLK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://blink.wink.org',\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 17,\n    tokenName: 'BLK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://blink.wink.org',\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 16,\n    tokenName: 'UNFI',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://unifiprotocol.com',\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 15,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: false,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 14,\n    tokenName: 'HARD',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://hard.kava.io',\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 13,\n    tokenName: 'bROOBEE',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://roobee.io/',\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 12,\n    tokenName: 'STAX',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'http://stablexswap.com/',\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 11,\n    tokenName: 'NAR',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://narwhalswap.org/',\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 10,\n    tokenName: 'NYA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    projectLink: 'https://nyanswop.org/',\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 9,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 8,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 7,\n    tokenName: 'INJ',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://injectiveprotocol.com/',\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 6,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xF35d63Df93f32e025bce4A1B98dcEC1fe07AD892',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 5,\n    tokenName: 'CTK',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://www.certik.foundation/',\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 6,\n  },\n  {\n    sousId: 4,\n    tokenName: 'SXP',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xD32B30b151a6aDB2e0Fa573a37510C097DaBD2F3',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://swipe.io/',\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 3,\n    tokenName: 'INJ',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x92E8CeB7eAeD69fB6E4d9dA43F605D2610214E68',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://injectiveprotocol.com/',\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 2,\n    tokenName: 'ALPHA',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73c83bd1646991cBca3e6b83ca905542FE07C57A',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://alphafinance.io/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: 1,\n    tokenName: 'TWT',\n    stakingTokenName: QuoteToken.SYRUP,\n    stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n    },\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://trustwallet.com/',\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n  {\n    sousId: -1,\n    tokenName: 'XVS',\n    stakingTokenName: QuoteToken.CAKE,\n    stakingTokenAddress: '0xeb44841d356b706684460eef19c7e577986bd637',\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n    },\n    tokenPerBlock: '0',\n    poolCategory: PoolCategory.CORE,\n    projectLink: 'https://venus.io/',\n    sortOrder: 999,\n    isFinished: true,\n    tokenDecimals: 18,\n  },\n]\n\nexport default pools\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract(abi as unknown as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingLike('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'LIKE-BUSD',\n    lpAddresses: {\n      97: '0xc10660856eac280276e6815326ffbea506390024',\n      56: '0x95f4ea60949fb8abb3d1bb114fbcb8e8e012b41f',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'LIKE-BNB',\n    lpAddresses: {\n      97: '0x3dbd669f87d3094be9131de698fb0bdb15b906eb',\n      56: '0xa3c81bbcbff337a9754816fb8559121332c4d9b4',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 8,\n    risk: 1,\n    lpSymbol: 'LIKE-USDT',\n    lpAddresses: {\n      97: '0xc114165652d66b263dda5d7c1c57d9e54f86cc52',\n      56: '0xc114165652d66b263dda5d7c1c57d9e54f86cc52',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n  },\n  {\n    pid: 7,\n    risk: 1,\n    lpSymbol: 'USDT-BUSD',\n    lpAddresses: {\n      97: '0x7abf762b2ea1f3b2a72b3e1c01b8822fb831fe57',\n      56: '0x7abf762b2ea1f3b2a72b3e1c01b8822fb831fe57',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0x55d398326f99059ff775485246999027b3197955',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n   {\n    pid: 9,\n    risk: 5,\n    lpSymbol: 'USDT-BNB',\n    lpAddresses: {\n      97: '0xfcb9a5f2c25de43c0a48d7370c9bedfe62914526',\n      56: '0xfcb9a5f2c25de43c0a48d7370c9bedfe62914526',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0x7afd064DaE94d73ee37d19ff2D264f5A2903bBB0',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n     {\n    pid: 12,\n    risk: 5,\n    lpSymbol: 'USDC-BNB',\n    lpAddresses: {\n      97: '0xe7358c03f2595f96ee833e6cb28c837d58525b3d',\n      56: '0xe7358c03f2595f96ee833e6cb28c837d58525b3d',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    risk: 3,\n    lpSymbol: 'BUSD-BNB',\n    lpAddresses: {\n      97: '0xe0e92035077c39594793e61802a350347c320cf2',\n      56: '0xbf82df15664dfc173035a296bf2056186e43dd9c',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  \n    {\n    pid: 10,\n    risk: 5,\n    lpSymbol: 'BTCB-BNB',\n    lpAddresses: {\n      97: '0x46e2019d4d9507b155da71bb9a9d2a56cd40b4b9',\n      56: '0x46e2019d4d9507b155da71bb9a9d2a56cd40b4b9',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n      {\n    pid: 14,\n    risk: 5,\n    lpSymbol: 'ETH-BNB',\n    lpAddresses: {\n      97: '0x25ca6ea112340fe6acc4024c4391914de8c1c297',\n      56: '0x25ca6ea112340fe6acc4024c4391914de8c1c297',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 16,\n    risk: 5,\n    lpSymbol: 'LIKE-BNB PancakeSwap',\n    lpAddresses: {\n      97: '0x3dbd669f87d3094be9131de698fb0bdb15b906eb',\n      56: '0x53094F1894269aBC597287A28d11abE46007fE03',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n   {\n    pid: 17,\n    risk: 5,\n    lpSymbol: 'LIKE-BUSD PancakeSwap',\n    lpAddresses: {\n      97: '0xc10660856eac280276e6815326ffbea506390024',\n      56: '0x45035411BD8089C009847C47031314BFf34fceDe',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  \n{\n    pid: 3,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'LIKE',\n    lpAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x95f4ea60949fb8abb3d1bb114fbcb8e8e012b41f',\n    },\n    tokenSymbol: 'LIKE',\n    tokenAddresses: {\n      97: '0xeb44841d356b706684460eef19c7e577986bd637',\n      56: '0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  \n  {\n    pid: 4,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '0x95f4ea60949fb8abb3d1bb114fbcb8e8e012b41f',\n      56: '0x95f4ea60949fb8abb3d1bb114fbcb8e8e012b41f', // LIKE-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 6,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '0x7abf762b2ea1f3b2a72b3e1c01b8822fb831fe57',\n      56: '0x7abf762b2ea1f3b2a72b3e1c01b8822fb831fe57', // USDT-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '0x55d398326f99059ff775485246999027b3197955',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n    {\n    pid: 13,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDC',\n    lpAddresses: {\n      97: '0xe7358c03f2595f96ee833e6cb28c837d58525b3d',\n      56: '0xe7358c03f2595f96ee833e6cb28c837d58525b3d', // USDC-BNB LP\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n       {\n    pid: 5,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '0xbf82df15664dfc173035a296bf2056186e43dd9c',\n      56: '0xbf82df15664dfc173035a296bf2056186e43dd9c', // BUSD-BNB LP\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 11,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '0x46e2019d4d9507b155da71bb9a9d2a56cd40b4b9',\n      56: '0x46e2019d4d9507b155da71bb9a9d2a56cd40b4b9', // BTCB-BNB LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 15,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'ETH',\n    lpAddresses: {\n      97: '0x25ca6ea112340fe6acc4024c4391914de8c1c297',\n      56: '0x25ca6ea112340fe6acc4024c4391914de8c1c297', // ETH-BNB LP\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@likeswaporg/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  // EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n // eslint-disable-next-line\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n     // eslint-disable-next-line\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then((r) => r.json())\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error('ERROR')\n          console.error(e)\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@likeswaporg/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@likeswaporg/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n    {\n    label: 'Exchange',\n    icon: 'TradeIcon',\n    href: 'https://app.likeswap.org/#/swap',\n  },\n      {\n    label: 'Liquidity',\n    icon: 'NftIcon',\n    href: 'https://app.likeswap.org/#/pool',\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Pools',\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n    // href: '',\n  },\n  {\n    label: 'IFO',\n    icon: 'IfoIcon',\n    href: '/ifo',\n    // href: '',\n  },\n  {\n    label: 'Referrals',\n    // icon: 'ReferralsIcon',\n    icon: 'GroupsIcon',\n    href: '/referrals',\n  },\n  {\n    label: 'Info (Coming Soon)',\n    // icon: 'ReferralsIcon',\n    icon: 'InfoIcon',\n    href: '#',\n  },\n  // {\n  //   label: 'NFT',\n  //   icon: 'NftIcon',\n  //   href: '/nft',\n  // },\n  {\n    label: 'Price Graph',\n    // icon: 'ReferralsIcon',\n    icon: 'SunIcon',\n    href: 'https://dex.guru/token/0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf-bsc',\n  },\n      {\n        label: 'Dapp Radar',\n\ticon: 'MoreIcon',\n        href: 'https://dappradar.com/binance-smart-chain/defi/likeswap',\n      },\n      {\n        label: 'PancakeSwap',\n\ticon: 'MoreIcon',\n        href: 'https://pancakeswap.info/token/0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n      },\n      {\n        label: 'BSCScan',\n\ticon: 'MoreIcon',\n        href: 'https://bscscan.com/token/0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf',\n      },  \n      {\n        label: 'Github',\n\ticon: 'MoreIcon',\n        href: 'https://github.com/likeswap/',\n      },\n      {\n        label: 'Docs',\n\ticon: 'MoreIcon',\n        href: 'https://docs.likeswap.org/',\n      },\n      {\n        label: 'Medium',\n\ticon: 'MoreIcon',\n        href: 'https://likeswap.medium.com/',\n      },\n \n    {\n    label: 'Audit by TechRate',\n    icon: 'AuditIcon',\n    href: 'https://github.com/LikeSwap/farms/blob/main/files/TechRateAudit.pdf',\n  },\n  {\n    label: 'Audit by Hacken',\n    icon: 'AuditIcon',\n    href: 'https://github.com/LikeSwap/farms/blob/main/files/hackenAudit.pdf',\n  },\n  {\n   label: 'Contact',\n    icon: 'AuditIcon',\n    href: 'https://docs.likeswap.org/community-social/contact',\n},\n]\n\nexport default config","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@likeswaporg/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/token/0x4a162e9a102d2195c1c4bf3bd319ad25a895ccaf\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@likeswaporg/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\n // eslint-disable-next-line\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@likeswaporg/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// import NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\n// const Metaverse = lazy(() => import('./views/Metaverse'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\nconst Referrals = lazy(() => import('./views/Referrals')) // add\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n\t\t<Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n        \n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/referrals\">\n              <Referrals />\n            </Route>\n            {/* <Route path=\"/nft\"> */}\n            {/* <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@likeswaporg/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { ReferralConfig } from './types'\n\nconst referrals: ReferralConfig = {\n  totalReferrals: 0,\n  totalReferralCommissions: 0,\n}\n\nexport default referrals\n","import { AbiItem } from 'web3-utils'\nimport referralABI from 'config/abi/referral.json'\nimport { getReferralAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\n\nconst web3 = getWeb3()\nconst referralContract = new web3.eth.Contract(referralABI as unknown as AbiItem, getReferralAddress())\n\nconst fetchTotalReferralCommissions = async (address) => {\n  const totalReferralCommissions = await referralContract.methods.totalReferralCommissions(address).call()\n  return totalReferralCommissions\n}\n\nexport default fetchTotalReferralCommissions\n","import { AbiItem } from 'web3-utils'\nimport referralABI from 'config/abi/referral.json'\nimport { getReferralAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\n\nconst web3 = getWeb3()\nconst referralContract = new web3.eth.Contract(referralABI as unknown as AbiItem, getReferralAddress())\n\nconst fetchTotalReferrals = async (address) => {\n  const referralsCount = await referralContract.methods.referralsCount(address).call()\n  return referralsCount\n}\n\nexport default fetchTotalReferrals\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport ReferralConfig from 'config/constants/referrals'\n // eslint-disable-next-line\nimport { ReferralsState, Referral } from '../types'\nimport fetchTotalReferralCommissions from './fetchTotalReferralCommissions'\nimport fetchTotalReferrals from './fetchTotalReferrals'\n\nconst initialState: ReferralsState = { data: { ...ReferralConfig } }\n\nexport const ReferralsSlice = createSlice({\n  name: 'Referrals',\n  initialState,\n  reducers: {\n    setTotalReferralsData: (state, action) => {\n      state.data = {\n        ...state.data,\n        totalReferrals: action.payload,\n      }\n    },\n    setTotalReferralCommissionsData: (state, action) => {\n      state.data = {\n        ...state.data,\n        totalReferralCommissions: action.payload,\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setTotalReferralsData, setTotalReferralCommissionsData } = ReferralsSlice.actions\n\n// Thunks\nexport const fetchTotalReferralsDataAsync = (account) => async (dispatch) => {\n  const data = await fetchTotalReferrals(account)\n\n  dispatch(setTotalReferralsData(data))\n}\n\nexport const fetchTotalReferralCommissionsDataAsync = (account) => async (dispatch) => {\n  const data = await fetchTotalReferralCommissions(account)\n\n  dispatch(setTotalReferralCommissionsData(data))\n}\n\nexport default ReferralsSlice.reducer\n"],"sourceRoot":""}